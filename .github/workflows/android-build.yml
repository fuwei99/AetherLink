name: Android Build

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Clear npm cache
        run: npm cache clean --force

      - name: Install Dependencies with retry
        run: |
          # 尝试多种方法安装依赖
          echo "Attempting npm ci..."
          npm ci || {
            echo "npm ci failed, trying alternative approaches..."
            echo "Cleaning up and retrying..."
            rm -rf node_modules package-lock.json
            npm cache clean --force

            echo "Trying npm install with --no-package-lock..."
            npm install --no-package-lock || {
              echo "npm install failed, trying with --legacy-peer-deps..."
              npm install --legacy-peer-deps || {
                echo "All npm methods failed, trying yarn as fallback..."
                npm install -g yarn
                yarn install --ignore-engines
              }
            }
          }

      - name: Build Web App
        run: npm run build

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle

      - name: Set up Android SDK
        uses: android-actions/setup-android@v2

      - name: Sync Capacitor
        run: npx cap sync android

      - name: Grant execute permission for gradlew
        run: chmod +x ./android/gradlew

      - name: Build Debug APK
        run: cd android && ./gradlew assembleDebug

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: android/app/build/outputs/apk/debug/app-debug.apk

      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_OUTPUT

      # 注释掉自动发布功能，避免产生过多的 releases
      # - name: Create Release
      #   if: (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master') && github.event_name == 'push'
      #   uses: softprops/action-gh-release@v2
      #   with:
      #     tag_name: android-v${{ steps.date.outputs.date }}
      #     name: Android Build ${{ steps.date.outputs.date }}
      #     body: |
      #       🤖 自动构建的 Android APK
      #
      #       📱 **构建信息**：
      #       - 构建时间：${{ steps.date.outputs.date }}
      #       - 提交：${{ github.sha }}
      #       - 分支：${{ github.ref_name }}
      #
      #       📦 **下载**：
      #       - 下载 APK 文件并安装到 Android 设备
      #
      #       ⚠️ **注意**：
      #       - 这是 Debug 版本，仅用于测试
      #       - 首次安装需要允许"未知来源"应用安装
      #       - 在设置 > 安全 > 未知来源 中启用
      #
      #       🔧 **安装步骤**：
      #       1. 下载 APK 文件到 Android 设备
      #       2. 在设置中启用"未知来源"应用安装
      #       3. 点击 APK 文件进行安装
      #     files: |
      #       android/app/build/outputs/apk/debug/app-debug.apk
      #     draft: false
      #     prerelease: true
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}