# 注释掉自动发布工作流，避免产生过多的 releases
# name: iOS Release

# on:
#   push:
#     tags:
#       - 'v*'
#   workflow_dispatch:

# jobs:
#   release:
#     runs-on: macos-latest
#     steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Clear npm cache
        run: npm cache clean --force

      - name: Install Dependencies with retry
        run: |
          echo "Attempting npm ci..."
          npm ci || {
            echo "npm ci failed, trying alternative approaches..."
            rm -rf node_modules package-lock.json
            npm cache clean --force
            npm install --no-package-lock || npm install --legacy-peer-deps
          }

      - name: Build Web App
        run: npm run build

      - name: Set up Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Install CocoaPods
        run: sudo gem install cocoapods

      - name: Sync Capacitor iOS
        run: npx cap sync ios

      - name: Update iOS project settings for unsigned build
        run: |
          cd ios/App
          
          # 修改项目设置，禁用代码签名
          sed -i '' 's/CODE_SIGN_STYLE = Automatic;/CODE_SIGN_STYLE = Manual;/g' App.xcodeproj/project.pbxproj
          sed -i '' 's/DEVELOPMENT_TEAM = .*;/DEVELOPMENT_TEAM = "";/g' App.xcodeproj/project.pbxproj
          sed -i '' 's/CODE_SIGN_IDENTITY = .*/CODE_SIGN_IDENTITY = "";/g' App.xcodeproj/project.pbxproj
          sed -i '' 's/PROVISIONING_PROFILE_SPECIFIER = .*/PROVISIONING_PROFILE_SPECIFIER = "";/g' App.xcodeproj/project.pbxproj

      - name: Build and Export iOS App
        run: |
          cd ios/App
          
          # 创建归档
          xcodebuild archive \
            -workspace App.xcworkspace \
            -scheme App \
            -configuration Release \
            -archivePath ./build/App.xcarchive \
            -allowProvisioningUpdates \
            CODE_SIGNING_ALLOWED=NO \
            CODE_SIGN_IDENTITY="" \
            PROVISIONING_PROFILE=""
          
          # 创建导出选项
          cat > ExportOptions.plist << EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
              <key>method</key>
              <string>development</string>
              <key>compileBitcode</key>
              <false/>
              <key>signingStyle</key>
              <string>manual</string>
              <key>stripSwiftSymbols</key>
              <true/>
              <key>thinning</key>
              <string>&lt;none&gt;</string>
          </dict>
          </plist>
          EOF
          
          # 导出IPA
          xcodebuild -exportArchive \
            -archivePath ./build/App.xcarchive \
            -exportPath ./build \
            -exportOptionsPlist ExportOptions.plist \
            -allowProvisioningUpdates
          
          # 重命名文件
          mv ./build/App.ipa ./build/AetherLink-${GITHUB_REF_NAME}-unsigned.ipa

      - name: Create Release Notes
        run: |
          cd ios/App/build
          
          cat > RELEASE_NOTES.md << EOF
          # AetherLink iOS ${GITHUB_REF_NAME} 发布说明
          
          ## 安装方法
          
          ### 推荐方法：AltStore / SideStore
          1. 在 iOS 设备上安装 [AltStore](https://altstore.io/) 或 [SideStore](https://sidestore.io/)
          2. 下载 \`AetherLink-${GITHUB_REF_NAME}-unsigned.ipa\` 文件到设备
          3. 使用 AltStore/SideStore 打开并安装 IPA 文件
          
          ### 其他方法
          - **Xcode**: 需要 Mac 和开发者账号，通过 Devices and Simulators 安装
          - **3uTools/iMazing**: 第三方工具，可能需要越狱设备
          - **重新签名**: 使用 iOS App Signer 等工具重新签名后安装
          
          ## 重要提醒
          - ⚠️ 此 IPA 文件未经 Apple 签名，仅供个人使用
          - ⚠️ 安装后需要在设置中信任开发者证书
          - ⚠️ 某些安装方法可能违反 Apple 服务条款，请自行承担风险
          - ⚠️ 建议仅在测试设备上安装
          
          ## 版本信息
          - 构建时间: $(date)
          - Git 提交: ${GITHUB_SHA:0:7}
          - 分支: ${GITHUB_REF_NAME}
          EOF

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ios/App/build/AetherLink-${{ github.ref_name }}-unsigned.ipa
            ios/App/build/RELEASE_NOTES.md
          name: iOS Release ${{ github.ref_name }}
          body_path: ios/App/build/RELEASE_NOTES.md
          draft: false
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
